# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//ark/ts2abc/ts2panda/ts2abc_config.gni")
import("//build/ohos.gni")

source_root = "//test/arkXtest/uitest"

config("uitest_common_configs") {
  include_dirs = [ "//third_party/json/single_include/nlohmann" ]
  cflags = [
    "-Wfloat-equal",
    "-Wformat=2",
    "-Wshadow",
  ]
}

ohos_static_library("uitest_core") {
  use_exceptions = true
  configs = [ ":uitest_common_configs" ]
  sources = [
    "${source_root}/core/extern_api.cpp",
    "${source_root}/core/extern_api_registration.cpp",
    "${source_root}/core/ui_action.cpp",
    "${source_root}/core/ui_controller.cpp",
    "${source_root}/core/ui_driver.cpp",
    "${source_root}/core/ui_model.cpp",
    "${source_root}/core/widget_image.cpp",
    "${source_root}/core/widget_matcher.cpp",
    "${source_root}/core/widget_selector.cpp",
  ]
  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  defines = [
    "__OHOS__=1",
    "LOG_TAG=\"UiTestKit_Base\"",
  ]
}

common_external_deps = [
  "ability_base:want",
  "ces_standard:cesfwk_core",
  "ces_standard:cesfwk_innerkits",
  "hiviewdfx_hilog_native:libhilog",
  "ipc:ipc_core",
]

accessibility_include_dirs = [
  "//base/accessibility/frameworks/aafwk/include",
  "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
  "//utils/native/base/include",
  "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
  "//base/accessibility/interfaces/innerkits/asacfwk/include",
  "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  "//base/accessibility/frameworks/asacfwk/include",
  "//foundation/appexecfwk/appexecfwk_lite/utils/bundle_lite",
  "//base/accessibility/util/include",
  "//base/accessibility/common/log/include",
  "//base/accessibility/dummyData",
  "//base/accessibility/interfaces/kits/napi/include",
  "//foundation/aafwk/standard/frameworks/kits/ability/native/src",
  "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
  "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
  "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/",
  "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/context/",
  "//foundation/aafwk/standard/interfaces/innerkits/runtime/include/",
  "//base/accessibility/interfaces/innerkits/aafwk/include",
]

ohos_executable("uitest_server") {
  configs = [ ":uitest_common_configs" ]
  sources = [
    "${source_root}/connection/ipc_transactors.cpp",
    "${source_root}/connection/ipc_transactors_impl.cpp",
    "${source_root}/server/server_main.cpp",
    "${source_root}/server/system_ui_controller.cpp",
  ]
  include_dirs = [
    "${source_root}/core",
    "${source_root}/connection",
  ]
  include_dirs += accessibility_include_dirs

  # static link the uitest_core as server end
  deps = [ ":uitest_core" ]

  deps += [
    "//foundation/aafwk/standard/frameworks/kits/appkit:app_context",
    "//foundation/aafwk/standard/frameworks/kits/appkit:appkit_native",
  ]

  external_deps = [ "accessibility:accessibleability" ]
  external_deps += [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
  ]

  #dependencies for screencap
  deps += [ "//third_party/libpng:libpng" ]
  external_deps += [
    "multimedia_image_standard:image_native",
    "window_manager:libdm",
    "window_manager:libwm",
  ]

  subsystem_name = "test"
  part_name = "arkXtest"
  output_name = "uitest"
  install_enable = true
  external_deps += common_external_deps
  defines = [
    "__OHOS__=1",
    "LOG_TAG=\"UiTestKit_Server\"",
  ]
}

ts2abc_gen_abc("gen_uitest_exporter_abc") {
  src_js = rebase_path("${source_root}/napi/uitest_exporter.js")
  dst_file = rebase_path(target_out_dir + "/uitest_exporter.abc")
  in_puts = [ "${source_root}/napi/uitest_exporter.js" ]
  out_puts = [ target_out_dir + "/uitest_exporter.abc" ]
  extra_args = [ "--module" ]
}

gen_js_obj("uitest_exporter_js") {
  input = "${source_root}/napi/uitest_exporter.js"
  output = target_out_dir + "/uitest_exporter.o"
}

gen_js_obj("uitest_exporter_abc") {
  input = get_label_info(":gen_exporter_abc", "target_out_dir") +
          "/uitest_exporter.abc"
  output = target_out_dir + "/uitest_exporter_abc.o"
  dep = ":gen_uitest_exporter_abc"
}

ohos_shared_library("uitest_client") {
  configs = [ ":uitest_common_configs" ]
  sources = [
    "${source_root}/connection/ipc_transactors.cpp",
    "${source_root}/connection/ipc_transactors_impl.cpp",
    "${source_root}/napi/uitest_napi.cpp",
  ]
  include_dirs = [
    "${source_root}/core",
    "${source_root}/connection",
  ]
  deps = [
    ":uitest_exporter_abc",
    ":uitest_exporter_js",
  ]
  subsystem_name = "test"
  part_name = "arkXtest"
  output_name = "uitest"
  external_deps = common_external_deps
  external_deps += [ "napi:ace_napi" ]
  relative_install_dir = "module"
  defines = [
    "__OHOS__=1",
    "LOG_TAG=\"UiTestKit_Client\"",
  ]
}

ohos_unittest("uitest_core_unittest") {
  sources = [
    "${source_root}/test/common_utilities_test.cpp",
    "${source_root}/test/extern_api_test.cpp",
    "${source_root}/test/transaction_connection_test.cpp",
    "${source_root}/test/ui_action_test.cpp",
    "${source_root}/test/ui_controller_test.cpp",
    "${source_root}/test/ui_model_test.cpp",
    "${source_root}/test/uidriver_test.cpp",
    "${source_root}/test/widget_image_test.cpp",
    "${source_root}/test/widget_matcher_test.cpp",
    "${source_root}/test/widget_selector_test.cpp",
  ]
  sources += [ "${source_root}/connection/ipc_transactors.cpp" ]
  deps = [
    ":uitest_core",
    "//third_party/googletest:gtest_main",
  ]
  include_dirs = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//third_party/json/single_include/nlohmann",
    "${source_root}/core",
    "${source_root}/connection",
  ]
  cflags = [ "-g" ]
  cflags_cc = [ "-g" ]
  use_exceptions = true
  module_out_path = "uitestkit/unittest"
  testonly = true
  subsystem_name = "test"
  part_name = "arkXtest"
}

group("uitestkit") {
  deps = [
    ":uitest_client",
    ":uitest_server",
  ]
}

group("uitestkit_test") {
  testonly = true
  deps = [ ":uitest_core_unittest" ]
}
